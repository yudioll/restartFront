(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{420:function(t,v,a){"use strict";a.r(v);var s=a(21),_=Object(s.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" https")]),t._v(" "),a("blockquote",[a("p",[t._v("原理概念：httsp是在tcp和http中加入一层数据加密层，ssl/tsl ,http 和tcp通信的时候先经过加密层加密在传给传给tcp，tcp进行解密，反之一样")])]),t._v(" "),a("h3",{attrs:{id:"基本概念和理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念和理解"}},[t._v("#")]),t._v(" 基本概念和理解")]),t._v(" "),a("blockquote",[a("p",[t._v("tls和ssl的功能实现主要基于三类算法，散列函数，非对称加密，和对称加密，其利用非对称加密进行身份验证和密钥协商，对称加密采用协商的秘钥对数据进行加密，基于散列函数验证数据得完整性。")])]),t._v(" "),a("h4",{attrs:{id:"几个主要的点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#几个主要的点"}},[t._v("#")]),t._v(" 几个主要的点")]),t._v(" "),a("ul",[a("li",[t._v("非对称加密主要用于身份验证和秘钥协商")]),t._v(" "),a("li",[t._v("对象加密主要对数据进行加密")]),t._v(" "),a("li",[t._v("散列函数主要用于对数据完整性的验证")])]),t._v(" "),a("h3",{attrs:{id:"ssl和tsl的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssl和tsl的区别"}},[t._v("#")]),t._v(" ssl和tsl的区别")]),t._v(" "),a("ul",[a("li",[t._v("ssl是tsl的前身，因为ssl有漏洞原因，现在基本使用tsl方案")])]),t._v(" "),a("h3",{attrs:{id:"ssl和tsl协议和证书的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssl和tsl协议和证书的区别"}},[t._v("#")]),t._v(" ssl和tsl协议和证书的区别")]),t._v(" "),a("ul",[a("li",[t._v("根本没有关联，一般都会从第三方申请证书")])]),t._v(" "),a("h3",{attrs:{id:"公钥私钥-对称秘钥的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#公钥私钥-对称秘钥的区别"}},[t._v("#")]),t._v(" 公钥私钥，对称秘钥的区别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("公钥和私钥成对出现")])]),t._v(" "),a("li",[a("p",[t._v("公钥用于对敏感信息加密，私钥用于标识发送方，所以公钥是保证数据得安全")])]),t._v(" "),a("li",[a("p",[t._v("采用公私钥加密的方式叫做非对称加密")]),t._v(" "),a("blockquote",[a("p",[t._v("对称加密服务端将私钥发给客户端，客户端用私钥进行加密，回传给服务端，服务端用公钥进行解密，存在私钥被第三方拦截问题，所以采用非对称加密")])])])]),t._v(" "),a("h3",{attrs:{id:"为什么使用非对称加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用非对称加密"}},[t._v("#")]),t._v(" 为什么使用非对称加密")]),t._v(" "),a("ul",[a("li",[t._v("以对称加密方式加密时必须将密钥也发给对方。可究竟怎样才能安全地转交？在互联网上转发密钥时，如果通信被监听那么密钥就可会落人攻击者之手，同时也就失去了加密的意义。另外还得设法安全地保管接收到的密钥，所以使用非对称加密。")])]),t._v(" "),a("h3",{attrs:{id:"非对称加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密"}},[t._v("#")]),t._v(" 非对称加密")]),t._v(" "),a("blockquote",[a("p",[t._v("加密算法是rsa ecc dh，加密使用一对非对称秘钥，公钥发给客户端，服务端私钥进行解密")])]),t._v(" "),a("h3",{attrs:{id:"非对称加密的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密的特点"}},[t._v("#")]),t._v(" 非对称加密的特点")]),t._v(" "),a("ul",[a("li",[t._v("有一对秘钥，公钥和私钥")]),t._v(" "),a("li",[t._v("公钥加密的内容只有私钥可以解开，私钥加密的内容只有公钥能解开")]),t._v(" "),a("li",[t._v("公钥可以发送给所有客户端，私钥只要服务端")]),t._v(" "),a("li",[t._v("可以一对多，服务端对多个客户端")])]),t._v(" "),a("h3",{attrs:{id:"非对称加密的缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密的缺点"}},[t._v("#")]),t._v(" 非对称加密的缺点")]),t._v(" "),a("ul",[a("li",[t._v("公钥可以被黑客拦截，进行解密")]),t._v(" "),a("li",[t._v("公钥不包含服务器信息，无法验证服务器的安全性，公钥可以被黑客进行篡改和拦截")]),t._v(" "),a("li",[t._v("非对称加密效率低")])]),t._v(" "),a("h3",{attrs:{id:"对称加密和非对称加密的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对称加密和非对称加密的区别"}},[t._v("#")]),t._v(" 对称加密和非对称加密的区别")]),t._v(" "),a("ul",[a("li",[t._v("对称加密需要将生成的私钥发送给对方")]),t._v(" "),a("li",[t._v("对称加密效率高")]),t._v(" "),a("li",[t._v("对称加密安全性更低")])]),t._v(" "),a("h3",{attrs:{id:"https采用对称加密和非对称加密的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https采用对称加密和非对称加密的方式"}},[t._v("#")]),t._v(" https采用对称加密和非对称加密的方式")]),t._v(" "),a("blockquote",[a("p",[t._v("先采用非对称加密，发送方用公钥进行加密‘秘钥’，接收方通过公钥解密，在采用对称加密方式进行通信")])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"数字签名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字签名"}},[t._v("#")]),t._v(" 数字签名")]),t._v(" "),a("blockquote",[a("p",[t._v("网络传输过程中需要经过很多中间节点，虽然数据无法被解密，但可能被篡改，那如何校验数据的完整性呢？ 那就是校验数字签名。")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如何生成数字签名")]),t._v(" "),a("blockquote",[a("p",[t._v("发送方先将一段文本用hash 函数生成消息摘要，在用秘钥进行加密生成数字签名")])])]),t._v(" "),a("li",[a("p",[t._v("效验比对数字签名流程")]),t._v(" "),a("blockquote",[a("p",[t._v("接受方接受到了发送方的原文和数字签名，首签用发送方的公钥进行解密数字签名生成消息摘要1，在通过hash函数对原文进行翻译生成消息摘要2，比对俩个消息摘要，如果不同说明被篡改")])])]),t._v(" "),a("li",[a("p",[t._v("效验数字签名的时候怎么确定发送方的身份问题")]),t._v(" "),a("blockquote",[a("p",[t._v("公钥不包含服务信息，不能知道发送方的身份，所以需要ca证书来证明发送方的身份")])])]),t._v(" "),a("li",[a("p",[t._v("示例")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/73017d487eb54088b1128a8ae5557b82~tplv-k3u1fbpfcp-watermark.image?imageslim",alt:"'中间截获过程'"}})]),t._v(" "),a("blockquote",[a("p",[t._v("客户端无法识别公钥是真服务端发过来的，说白了就是我拿到了公钥，但是不知道是谁的公钥")])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"数字证书认证机构的流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字证书认证机构的流程"}},[t._v("#")]),t._v(" 数字证书认证机构的流程")]),t._v(" "),a("ul",[a("li",[t._v("机构向ca提交申请，携带信息包括，服务端公钥、域名信息、组织信息、签发机构的ca信息")]),t._v(" "),a("li",[t._v("审核通过之后，ca会颁发证书，证书包括申请者的公钥，ca机构信息，到期时间，证书序列号，签名\n"),a("blockquote",[a("p",[t._v("ca证书中签名的生成，首签通过散列函数对明文信息生成摘要，在通过ca秘钥加密摘要生成签名【数字签名生成过程】")])])]),t._v(" "),a("li",[t._v("client想sever请求，返回ca的证书")]),t._v(" "),a("li",[t._v("client 验证证书，首先client 内部安装了信任的ca机构，首签通过相同的散列函数解析原文生成摘要1，在通过ca的公钥解析\nca私钥加密的信息生成摘要2，对比摘要【数字签名验证的过程】")]),t._v(" "),a("li",[t._v("client 还会验证证书的合法性，是否过期，如果过期或者不合法，通常就会在chrome浏览器左上角看见不安全的表示")])]),t._v(" "),a("h3",{attrs:{id:"如果只使用第三方机构加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果只使用第三方机构加密"}},[t._v("#")]),t._v(" 如果只使用第三方机构加密")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("> 将网站信息通过特点的算法生成秘钥，服务端在通过私钥加密返回的秘钥【第三方的数字证书生成过程】\n")])])]),a("ul",[a("li",[t._v("该种方式的特点，首签黑客也也可以申请第三方的信息，以下网上的实例")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/de3947f4b265403fad5c89b2a1f9b82b~tplv-k3u1fbpfcp-watermark.image",alt:"黑客截取第三方机构的加密过程"}})]),t._v(" "),a("ul",[a("li",[t._v("用这种方式缺少了数字签名比对的古城，这样的缺点是客户端还是不知道server端是谁")])]),t._v(" "),a("h3",{attrs:{id:"数字签名的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字签名的作用"}},[t._v("#")]),t._v(" 数字签名的作用")]),t._v(" "),a("ul",[a("li",[t._v("client能知道发送方是谁，其他人无法冒充")]),t._v(" "),a("li",[t._v("能够验证数据得完整性，无法被黑客篡改")])]),t._v(" "),a("h3",{attrs:{id:"https-工作流的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https-工作流的过程"}},[t._v("#")]),t._v(" https 工作流的过程")]),t._v(" "),a("ul",[a("li",[t._v("首签客户端clent发起请求443端口，这时候就是请求证书")]),t._v(" "),a("li",[t._v("server收到请求返回公钥证书")]),t._v(" "),a("li",[t._v("client收到公钥证书，验证合法性")]),t._v(" "),a("li",[t._v("client 生成伪随")])]),t._v(" "),a("p",[t._v("机数（会话秘钥），通过server 的公钥进行加密，发送给server（这一步生成了对称秘钥）")]),t._v(" "),a("ul",[a("li",[t._v("server通过私钥解析处client端的会话秘钥（服务端接收到了对称秘钥）"),a("strong",[t._v("以上步骤就是非对称加密，以下消息传递的过程就是对称加密")])]),t._v(" "),a("li",[t._v("server通过会话秘钥加密明文A发送给client")]),t._v(" "),a("li",[t._v("client通过会话密码解密")])])])}),[],!1,null,null,null);v.default=_.exports}}]);